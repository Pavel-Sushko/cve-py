import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import json
import yaml
import xml.etree.ElementTree as ET
import os
from dotenv import load_dotenv


class MailClient:
    smtp_server = None
    smtp_port = None
    username = None
    password = None

    def __init__(self, smtp_server, smtp_port, username, password):
        self.smtp_server = smtp_server
        self.smtp_port = smtp_port
        self.username = username
        self.password = password

    def send_email(self, to_address, subject, body):
        # Create the message
        msg = MIMEMultipart()
        msg['From'] = self.username
        msg['To'] = to_address
        msg['Subject'] = subject
        msg.attach(MIMEText(body, 'plain'))

        # Connect to the SMTP server and send the message
        with smtplib.SMTP(self.smtp_server, self.smtp_port) as server:
            server.starttls()
            server.login(self.username, self.password)
            server.sendmail(self.username, to_address, msg.as_string())

    def load_config_file(self, config_file):
        ext = os.path.splitext(config_file)[1]

        if ext == '.json':
            self.load_json_config_file(config_file)

        elif ext in ('.yaml', '.yml'):
            self.load_yaml_config_file(config_file)

        elif ext == '.xml':
            self.load_xml_config_file(config_file)

        elif ext == '.env':
            self.load_env_config_file(config_file)

        else:
            raise TypeError('Invalid config file type.')

    def load_json_config_file(self, config_file):
        with open(config_file, 'r') as file:
            config = json.load(file)

        self.smtp_server = config['smtp_server']
        self.smtp_port = config['smtp_port']
        self.username = config['username']
        self.password = config['password']

    def load_yaml_config_file(self, config_file):
        with open(config_file, 'r') as file:
            config = yaml.safe_load(file)

        self.smtp_server = config['smtp_server']
        self.smtp_port = config['smtp_port']
        self.username = config['username']
        self.password = config['password']

    def load_xml_config_file(self, config_file):
        with open(config_file, 'r') as file:
            config = ET.parse(file).getroot()

        self.smtp_server = config.find('smtp_server').text
        self.smtp_port = config.find('smtp_port').text
        self.username = config.find('username').text
        self.password = config.find('password').text

    def load_env_config_file(self, config_file):
        load_dotenv(config_file)

        self.smtp_server = os.getenv('SMTP_SERVER')
        self.smtp_port = os.getenv('SMTP_PORT')
        self.username = os.getenv('USERNAME')
        self.password = os.getenv('PASSWORD')
